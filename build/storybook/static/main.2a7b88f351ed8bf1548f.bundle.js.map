{"version":3,"file":"main.2a7b88f351ed8bf1548f.bundle.js","sources":["webpack:///./src/components/button/index.tsx","webpack:///./src/components/typeography/index.tsx","webpack:///./.storybook/config.ts","webpack:///./src/components/card/Card.stories.tsx","webpack:///./src/components/card/index.tsx","webpack:///./src/components/drawer/components/VerticalDrawer.tsx","webpack:///./src/components/drawer/components/DrawerToggle.tsx","webpack:///./src/components/drawer/components/DrawerHeader.tsx","webpack:///./src/components/input/Input.stories.tsx","webpack:///./src/components/input/index.tsx","webpack:///./src/components/notice/Notice.stories.tsx","webpack:///./src/components/notice/index.tsx","webpack:///./src/components/tag/Tag.stories.tsx","webpack:///./src/components/tag/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport * as _ from 'lodash';\n\nimport styled, {\n  ITheme,\n  theme,\n} from '../../styles/theme';\n\nimport {\n  ItemType\n} from '../../types';\n\nconst REQUIRE_DARK_TEXT = new Set(['success', 'warning', 'disabled']);\n\ninterface IButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  buttonType: ItemType;\n  className?: string;\n  disabled?: boolean;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  theme: ITheme;\n}\n\nconst ButtonComponent: React.FunctionComponent<IButtonProps> = ({\n  type,\n  className,\n  children,\n  onClick,\n  disabled\n}) => (\n  <button\n    type={type}\n    className={`kingsbury-button ${className}`}\n    onClick={onClick}\n    disabled={disabled}\n  >\n    {children}\n  </button>\n);\n\nconst Button = styled(ButtonComponent)`\n  background: ${(props: IButtonProps) => (\n    props.disabled ?\n      props.theme.buttons.backgroundDisabled :\n      props.theme.colors[props.buttonType]\n  )};\n\n  color: ${(props: IButtonProps) => {\n    if (REQUIRE_DARK_TEXT.has(props.buttonType) || props.disabled) {\n      return props.theme.colors.black\n    }\n    return props.theme.colors.white;\n  }};\n\n  height: ${(props: IButtonProps) => `${props.theme.buttons.height}px`};\n\n  font-weight: 400;\n  font-size: 16px;\n  font-family: inherit;\n  text-decoration: none;\n\n  border: ${(props: IButtonProps) => props.theme.buttons.border};\n  border-radius: ${(props: IButtonProps) => props.theme.buttons.borderRadius};\n\n  padding: ${(props: IButtonProps) => props.theme.buttons.padding};\n  box-shadow: ${(props: IButtonProps) => props.theme.buttons.boxShadow};\n\n  cursor: ${(props: IButtonProps) => (\n    props.disabled ? 'not-allowed' : 'pointer'\n  )};\n\n  transition: border-radius ${(props: IButtonProps) => props.theme.animations.time.fast};\n\n  &:hover {\n    border-radius: ${(props: IButtonProps) => (\n      props.disabled ?\n        props.theme.buttons.borderRadius :\n        `${props.theme.buttons.height / 2}px`\n    )};\n  }\n\n  &:active {\n    opacity: ${(props: IButtonProps) => (\n      props.disabled ? 1 : 0.7\n    )};\n  }\n\n  &:focus {\n    outline: none;\n  }\n`\n\nButton.defaultProps = {\n  disabled: false,\n  type: undefined,\n  onClick: () => _.noop(),\n  theme,\n}\n\nexport default Button;\n","import styled, {\n  ITheme,\n} from '../../styles/theme';\n\nexport interface ITypeographyProps {\n  theme: ITheme;\n}\n\nexport const H1 = styled.span`\n  font-size: 32px;\n`;\n\nexport const H2 = styled.span`\n  font-size: 24px;\n`;\n\nexport const H3 = styled.span`\n  font-size: 18px\n`;\n\nexport const H4 = styled.span`\n  font-size: 16px;\n`;\n\nexport const P = styled.span`\n  font-size: 12px;\n`;","import {\n  addDecorator,\n  addParameters,\n  configure\n} from '@storybook/react';\n\nimport themeDecorator from './themeDecorator';\n\nimport yourTheme from './yourTheme';\n\naddParameters({\n  options: {\n    theme: yourTheme,\n  },\n});\n\nconst req = require.context(\"../src\", true, /.stories.tsx$/);\nfunction loadStories() {\n  req.keys().forEach((filename: string) => req(filename));\n}\n\naddDecorator(themeDecorator);\n\nconfigure(loadStories, module);","import * as React from 'react';\n\nimport {\n  storiesOf\n} from '@storybook/react';\n\nimport styled from '../../styles/theme';\n\nimport Card from '.';\n\nconst stories = storiesOf('Card', module);\n\nconst TestContent = styled.div`\n  height: 110px;\n`;\n\nstories.add(\n  'Default',\n  () => (\n    <Card>\n      asdfasdf\n    </Card>\n  )\n);\n\nstories.add(\n  'With Click',\n  () => (\n    <Card style={{ borderLeft: '1px solid red' }} onClick={() => console.log('asdfasdf')}>\n      <TestContent>\n        adasd\n      </TestContent>\n    </Card>\n  )\n);\n\n","import * as React from 'react';\n\nimport styled, {\n  css\n} from '../../styles/theme';\n\nimport {\n  ITheme,\n  theme\n} from '../../styles/theme';\n\ninterface ICardProps extends React.HTMLAttributes<HTMLDivElement> {\n  header?: React.ReactNode;\n  footer?: React.ReactNode;\n  className?: string;\n  onClick?: () => void;\n  theme: ITheme;\n}\n\nclass CardComponent extends React.Component<ICardProps> {\n  render() {\n    const {\n      className,\n      header,\n      footer,\n      onClick,\n      children\n    } = this.props;\n\n    return (\n      <div className={`kingsbury-card ${className}`} onClick={onClick}>\n        {header &&\n          <div className=\"header\">\n            {header}\n          </div>\n        }\n        <div className=\"content\">\n          {children}\n        </div>\n        {footer &&\n          <div className=\"footer\">\n            {footer}\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nconst Card = styled(CardComponent)`\n  height: ${(props) => props.theme.card.height};\n  width: ${(props) => props.theme.card.width};\n\n  background: ${(props) => props.theme.card.background};\n  border: ${(props) => props.theme.card.outerBorder};\n  box-shadow: ${(props) => props.theme.card.boxShadow};\n  border-radius: ${(props) => props.theme.card.borderRadius};\n\n  opacity: ${(props) => props.onClick ?\n    0.8 :\n    1\n  };\n\n  cursor: ${(props) => props.onClick ?\n    'pointer' :\n    'default'\n  };\n\n  transition: .35s cubic-bezier(.19, 1, .4, 1);\n\n  ${(props) => props.onClick && css`\n      &:hover {\n        opacity: 1;\n        transform: translateY(-1%);\n        box-shadow: 0 7px 21px 0 rgba(0,0,0,.07);\n      }\n    `\n  }\n\n  .header {\n    background: ${(props) => props.theme.card.headerBackground};\n    height: ${(props) => props.theme.card.headerHeight};\n    border-bottom: ${(props) => props.theme.card.innerBorder};\n    border-top-left-radius: ${(props) => props.theme.card.borderRadius};\n    border-top-right-radius: ${(props) => props.theme.card.borderRadius};\n  }\n\n  .footer {\n    background: ${(props) => props.theme.card.footerBackground};\n    height: ${(props) => props.theme.card.footerHeight};\n    border-top: ${(props) => props.theme.card.innerBorder};\n    border-bottom-left-radius: ${(props) => props.theme.card.borderRadius};\n    border-bottom-right-radius: ${(props) => props.theme.card.borderRadius};\n  }\n`;\n\nCard.defaultProps = {\n  theme: theme\n}\n\nexport default Card;","import * as React from 'react';\n\nimport styled, {\n  theme\n} from '../../../styles/theme';\n\nimport {\n  IDrawerProps,\n  IContainerProps,\n  DrawerState\n} from '../types';\n\nimport {\n  VERT_DRAWER_CONFIG_MAP\n} from '../common';\n\nimport DrawerToggle from './DrawerToggle';\nimport DrawerHeader from './DrawerHeader';\n\nconst Container = styled.div<IContainerProps>`\n  position: fixed;\n  top: ${(props) => VERT_DRAWER_CONFIG_MAP[props.drawerState].top};\n  left: 0px;\n  background-color: ${(props) => props.theme.colors.white};\n\n  z-index: 1;\n  width: 100%;\n  height: 100%;\n  border-radius: ${(props) => VERT_DRAWER_CONFIG_MAP[props.drawerState].borderRadius};\n\n  box-shadow: ${(props) => `0px 0px 7px rgba(${props.theme.colors.blackRGB}, 0.20)`};\n\n  transition: all ${(props) => props.theme.animations.time.fast} cubic-bezier(0,1.04,.47,.98);\n`;\n\nconst VertDrawer: React.FunctionComponent<IDrawerProps> = (props) => {\n\n  function setDrawerState(drawerState: DrawerState) {\n    if (props.setDrawerState) {\n      props.setDrawerState(drawerState);\n    }\n  }\n\n  return (\n    <Container\n      drawerState={props.drawerState}\n    >\n      {props.showToggle &&\n        <DrawerToggle\n          onClick={\n            (props.drawerState === 'OPEN') ?\n              () => setDrawerState('PARTIAL') :\n              () => setDrawerState('OPEN')\n          }\n          drawerState={props.drawerState}\n        />\n      }\n      <DrawerHeader onClose={() => setDrawerState('CLOSED')}>\n        {props.drawerHeaderContent}\n      </DrawerHeader>\n      {props.children}\n    </Container>\n  );\n}\n\nVertDrawer.defaultProps = {\n  theme: theme,\n  showToggle: true\n};\n\nexport default VertDrawer;\n","import * as React from 'react';\n\nimport styled, {\n  ITheme,\n  theme,\n  css\n} from '../../../styles/theme';\n\nimport {\n  DrawerState\n} from '../types';\n\ninterface IToggleItemProps {\n  side: 'left' | 'right';\n  open: boolean;\n  theme?: ITheme\n};\n\ninterface IToggleProps {\n  drawerState: DrawerState;\n  onClick: () => void;\n  theme?: ITheme;\n}\n\nconst ToggleContainer = styled.div`\n  width: 100%;\n\n  display: flex;\n  justify-content: center;\n`;\n\nconst ToggleItemContainer = styled.div`\n  height: 20px;\n  cursor: pointer;\n`;\n\nconst ToggleItem = styled.div<IToggleItemProps>`\n  display: inline-block;\n  height: 6px;\n  width: 25px;\n  border-radius: 3px;\n\n  background-color: ${(props) => props.theme.drawer.toggleColor};\n\n  ${(props) => props.open ? css`\n      transform-origin: center;\n      transform:\n        ${() => props.side === 'left' && 'translateX(8px)'}\n        rotate(${() => props.side === 'left' ? '35deg' : '-35deg'});\n    ` : css`\n      ${props.side === 'left' && `transform: translateX(5px)`};\n    `\n  };\n\n  transition: all ${(props) => props.theme.animations.time.fast} ease-out;\n  transition-delay: 0.05s;\n`;\n\nToggleItem.defaultProps = {\n  theme\n};\n\nconst DrawerToggle: React.FunctionComponent<IToggleProps> = ({\n  drawerState,\n  onClick\n}) => (\n  <ToggleContainer>\n    <ToggleItemContainer onClick={onClick}>\n      <ToggleItem side=\"left\" open={drawerState === 'OPEN'} />\n      <ToggleItem side=\"right\" open={drawerState === 'OPEN'} />\n    </ToggleItemContainer>\n  </ToggleContainer>\n);\n\nDrawerToggle.defaultProps = {\n  theme\n};\n\nexport default DrawerToggle;\n\n\n","import * as React from 'react';\n\nimport styled from '../../../styles/theme';\n\nimport {\n  SVGClose\n} from '../../icons';\n\ninterface IDrawerHeaderProps {\n  onClose: () => void;\n};\n\nconst Container = styled.div`\n  height: auto;\n  padding: 0px 15px;\n  \n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst CloseContainer = styled.div`\n  margin-left: 10px;\n  cursor: pointer;\n`;\n\nconst DrawerHeader: React.FunctionComponent<IDrawerHeaderProps> = ({\n  children,\n  onClose\n}) => {\n  return (\n    <Container>\n      <CloseContainer onClick={onClose}>\n        <SVGClose />\n      </CloseContainer>\n      {children}\n    </Container>\n  );\n}\n\n\nexport default DrawerHeader;","import * as React from 'react';\n\nimport {\n  storiesOf\n} from '@storybook/react';\n\nimport styled from '../../styles/theme';\n\nimport Input from '.';\n\nconst stories = storiesOf('Input', module);\n\nstories.add(\n  'Default',\n  () => (\n    <div>\n      <Input showBorder={false} size=\"large\" placeholder=\"This is a large input\"/>\n    </div>\n  )\n);\n\nstories.add(\n  'Disabled',\n  () => (\n    <div>\n      <Input disabled placeholder=\"this is a test\"/>\n    </div>\n  )\n);\n\nstories.add(\n  'With Label',\n  () => (\n    <div>\n      <Input\n        placeholder=\"this is a test\"\n        label={<div>This is a label</div>}\n      />\n    </div>\n  )\n);\n\nstories.add(\n  'Password',\n  () => (\n    <div>\n      <Input\n        type=\"password\"\n        placeholder=\"this is a test\"\n        label={'Password'}\n      />\n    </div>\n  )\n);\n\n\nstories.add(\n  'With Label and Error',\n  () => (\n    <div>\n      <Input\n        placeholder=\"this is a test\"\n        label={<div>This is a label</div>}\n        error={'im errored'}\n      />\n    </div>\n  )\n);\n\nstories.add(\n  'With Label and Error and Error Component',\n  () => (\n    <div>\n      <Input\n        placeholder=\"this is a test\"\n        label={<div>This is a label</div>}\n        error={'This is the error'}\n        errorComponent={(error) => <div style={{ color: 'red' }}>{error}</div>}\n      />\n    </div>\n  )\n);\n\n\nconst InputExtended = styled(Input)`\n  margin-bottom: 50px;\n`;\n\nstories.add(\n  'Input Extended',\n  () => (\n    <React.Fragment>\n      <InputExtended\n        placeholder=\"this is a test\"\n        label={<div>This is a label</div>}\n        error={'This is the error'}\n        errorComponent={(error) => <div style={{ color: 'red' }}>{error}</div>}\n      />\n      <div>confirming margin works</div>\n    </React.Fragment>\n  )\n);\n\n\n","import * as React from 'react';\n\nimport styled, {\n  ITheme,\n  theme\n} from '../../styles/theme';\n\ninterface IInputProps {\n  className?: string;\n  disabled: boolean;\n  error?: string;\n  errorComponent?: (error: string) => React.ReactNode;\n  id?: string; // to be used with formik\n  label?: React.ReactNode;\n  name?: string // to be used with formik\n  onChange?: React.ChangeEventHandler<HTMLInputElement>;\n  placeholder?: string;\n  type?: 'password' | undefined;\n  size?: 'small' | 'large';\n  showBorder?: boolean;\n  theme: ITheme;\n}\n\nclass InputComponent extends React.Component<IInputProps> {\n\n  static defaultProps = {\n    disabled: false,\n    type: undefined,\n    size: 'small',\n    showBorder: true,\n    errorComponent: (error: string) => <div>{error}</div> \n  }\n\n  onInputChange  = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      onChange\n    } = this.props;\n\n    if (onChange) {\n      onChange(e);\n    }\n  }\n\n  render() {\n    const {\n      id,\n      name,\n      label,\n      error,\n      errorComponent,\n      className,\n      disabled,\n      type,\n      placeholder\n    } = this.props;\n\n    return (\n      <div className={`kingsbury-input ${className}`}>\n        {label &&\n          <label>{label}</label>\n        }\n        <input\n          id={id}\n          name={name}\n          type={type}\n          placeholder={placeholder}\n          onChange={this.onInputChange}\n          disabled={disabled}\n        />\n        {(error && errorComponent) &&\n          errorComponent(error)\n        }\n      </div>\n    );\n  }\n}\n\nconst Input = styled(InputComponent)`\n  input {\n    height: ${(props: IInputProps) => props.size === 'small' ?\n      props.theme.input.heightSmall :\n      props.theme.input.heightLarge\n    };\n    width: 100%;\n    -webkit-appearance: none;\n\n    font-family: inherit;\n    font-size: ${(props: IInputProps) => props.size === 'small' ?\n      props.theme.input.fontSizeSmall :\n      props.theme.input.fontSizeLarge\n    };\n\n    background-color: ${(props: IInputProps) => props.theme.input.background};\n    color: ${(props: IInputProps) => props.theme.input.color};\n\n    border: ${(props: IInputProps) => props.showBorder ?\n      props.theme.input.border :\n      'none'\n    };\n\n    border-color: ${(props: IInputProps) => props.error ?\n      props.theme.colors.danger :\n      props.theme.input.borderColor\n    };\n\n    border-radius: ${(props: IInputProps) => props.theme.input.borderRadius};\n    box-sizing: border-box;\n\n    line-height: 38px;\n    padding: ${(props: IInputProps) => props.showBorder ? '10px 0px 10px 10px' : '10px 0px'};\n\n    &::placeholder {\n      color: ${(props: IInputProps) => props.theme.input.placeholderColor};\n    }\n\n    &:disabled {\n      cursor: not-allowed;\n    }\n\n    &:focus {\n      border: ${(props: IInputProps) => props.showBorder ?\n        `1px solid ${props.theme.colors.primary}` :\n        'none'\n      };\n      outline: none;\n    }\n  }\n\n  label {\n    font-size: 12px;\n  }\n`;\n\nInput.defaultProps = {\n  theme: theme,\n  size: 'small',\n  showBorder: true\n}\n\nexport default Input;","import * as React from 'react';\n\nimport {\n  storiesOf\n} from '@storybook/react';\n\nimport styled from '../../styles/theme';\n\nimport Notice from '.';\n\nconst Avatar = styled.div`\n  height: 30px;\n  width: 30px;\n  border-radius: 50%;\n  background-color: hotpink;\n`;\n\nconst stories = storiesOf('Notice', module).addParameters({\n  info: {\n    propTables: [Notice]\n  }\n})\n\nstories.add(\n  'Type',\n  () => (\n    <div>\n      <div>\n        <Notice\n          title=\"Default\"\n          description=\"Description of notice\"\n          type=\"default\"\n        />\n      </div>\n      <div>\n        <Notice\n          title=\"Info\"\n          description=\"Description of notice\"\n          type=\"info\"\n        />\n      </div>\n      <div>\n        <Notice\n          title=\"Success\"\n          description=\"Description of notice\"\n          type=\"success\"\n        />\n      </div>\n      <div>\n        <Notice\n          title=\"Warning\"\n          description=\"Description of notice\"\n          type=\"warning\"\n        />\n      </div>\n      <div>\n        <Notice\n          title=\"Danger\"\n          description=\"Description of notice\"\n          type=\"danger\"\n        />\n      </div>\n    </div>\n  )\n);\n\nstories.add(\n  'With Avatar',\n  () => (\n    <Notice\n      title=\"Default\"\n      description=\"Description of notice\"\n      avatar={<Avatar />}\n      type=\"default\"\n    />\n  )\n);\n\nstories.add(\n  'Hide Pill',\n  () => (\n    <Notice\n      title=\"Default\"\n      description=\"Description of notice\"\n      type=\"default\"\n      hidePill\n    />\n  )\n);\n\nstories.add(\n  'With Content',\n  () => (\n    <Notice\n      title=\"Default\"\n      description=\"Description of notice\"\n      avatar={<Avatar />}\n      contentRight={<div>Content</div>}\n      type=\"default\"\n    />\n  )\n);\n\nstories.add(\n  'Avatar no pill',\n  () => (\n    <Notice\n      title=\"Default\"\n      description=\"Description of notice\"\n      avatar={<Avatar />}\n      type=\"default\"\n      hidePill\n    />\n  )\n);","import * as React from 'react';\n\nimport styled, {\n  ITheme,\n  theme\n} from '../../styles/theme';\n\nimport {\n  ItemType\n} from '../../types';\n\ninterface INoticeProps {\n  avatar?: React.ReactNode;\n  className?: string;\n  contentRight?: React.ReactNode;\n  description?: React.ReactNode | string;\n  hidePill?: boolean;\n  theme: ITheme;\n  title?: React.ReactNode;\n  type: ItemType;\n}\n\nclass NoticeComponent extends React.Component<INoticeProps> {\n  render() {\n    const {\n      className,\n      title,\n      description,\n      avatar,\n      hidePill,\n      contentRight\n    } = this.props;\n\n    return (\n      <div className={`kingsbury-notice ${className}`}>\n        {avatar &&\n          <div className=\"avatar\">\n            {avatar}\n          </div>\n        }\n        <div className=\"content\" >\n          {!hidePill &&\n            <div className=\"pill\" />\n          }\n          <div className=\"right-content\">\n            <div className=\"title-content\">\n              {title &&\n                <div className=\"title\">{title}</div>\n              }\n              {description &&\n                <div className=\"description\">{description}</div>\n              }\n            </div>\n            {contentRight &&\n              <div className=\"content-right\">\n                {contentRight}\n              </div>\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Notice = styled(NoticeComponent)`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  max-width: 400px;\n  padding: 10px 0px;\n\n  .avatar {\n    height: ${(props: INoticeProps) => props.theme.notice.avatarHeight};\n    width: ${(props: INoticeProps) => props.theme.notice.avatarWidth};\n    margin-right: 5px;\n  }\n\n  .content {\n    display: flex;\n    flex: 1;\n\n    .right-content {\n      display: flex;\n      justify-content: space-between;\n      width: 100%;\n      height: 100%;\n    }\n\n    .pill {\n      background: ${(props: INoticeProps) => props.theme.colors[props.type]};\n      width: ${(props: INoticeProps) => props.theme.notice.pillWidth};\n      border-radius: ${(props: INoticeProps) => props.theme.notice.pillRadius};\n      min-height: ${(props: INoticeProps) => props.theme.notice.pillMinHeight};\n      margin-right: 5px;\n    }\n\n    .title-content {\n      .title {\n        font-size: ${(props: INoticeProps) => props.theme.notice.titleFontSize};\n        font-weight: ${(props: INoticeProps) => props.theme.notice.titleFontWeight};\n        color: ${(props: INoticeProps) => props.theme.notice.titleFontColor};\n      }\n\n      .description {\n        font-size: ${(props: INoticeProps) => props.theme.notice.descriptionFontSize};\n        font-weight: ${(props: INoticeProps) => props.theme.notice.descriptionFontWeight};\n        color: ${(props: INoticeProps) => props.theme.notice.descriptionFontColor};\n      } \n    }\n  }\n`;\n\nNotice.defaultProps = {\n  theme: theme,\n  hidePill: false,\n  type: 'default'\n}\n\nexport default Notice;","import * as React from 'react';\n\nimport {\n  storiesOf\n} from '@storybook/react';\n\nimport styled from '../../styles/theme';\n\nimport Tag from '.';\n\nconst stories = storiesOf('Tag', module);\n\nconst MarginRight = styled.span`\n  margin-right: 10px;\n`;\n\nstories.add(\n  'All',\n  () => (\n    <React.Fragment>\n      <MarginRight>\n        <Tag\n          text={'aaho'}\n          tagType=\"default\"\n        />\n      </MarginRight>\n      <MarginRight>\n        <Tag\n          text={'aaho'}\n          tagType=\"primary\"\n        />\n      </MarginRight>\n      <MarginRight>\n        <Tag\n          text={'aaho'}\n          tagType=\"warning\"\n        />\n      </MarginRight>\n      <MarginRight>\n        <Tag\n          text={'aaho'}\n          tagType=\"danger\"\n        />\n      </MarginRight>\n      <MarginRight>\n        <Tag\n          text={'aaho'}\n          tagType=\"success\"\n        />\n      </MarginRight>\n      <Tag\n        text={'aaho'}\n        tagType=\"info\"\n      />\n    </React.Fragment>\n  )\n);\n\nstories.add(\n  'Click',\n  () => (\n    <Tag\n      text={'aaho'}\n      onClick={() => console.log('clicking')}\n      tagType=\"default\"\n    />\n  )\n);\n\n\n","import * as React from 'react';\n\nimport styled, {\n  ITheme,\n  css,\n  theme\n} from '../../styles/theme';\n\nimport {\n  ItemType\n} from '../../types';\n\nimport {\n  P\n} from '../typeography';\n\ninterface ITagProps extends React.HTMLAttributes<HTMLDivElement> {\n  text: React.ReactNode;\n  className?: string;\n  onClick?: () => void;\n  tagType: ItemType;\n  theme: ITheme;\n};\n\nconst TagComponent: React.FunctionComponent<ITagProps> = ({\n  text,\n  onClick,\n  className\n}) => (\n  <span\n    className={`kingsbury-tag ${className}`}\n    onClick={onClick}\n  >\n    <P className=\"kingsbury-tag-text\">{text}</P>\n  </span>\n);\n\nconst Tag = styled(TagComponent)`\n  background-color: ${(props) => `rgba(${props.theme.colors[`${props.tagType}RGB`]}, 0.2)`};\n  padding: ${(props) => props.theme.tag.padding};\n  height: ${(props) => props.theme.tag.height};\n\n  color: ${(props) => props.theme.colors.black};\n  border: 1px solid ${(props) => props.theme.colors[props.tagType]};\n  border-radius: ${(props) => props.theme.tag.borderRadius};\n\n  cursor: ${(props) => props.onClick ?\n    'pointer' :\n    'default'\n  };\n\n  ${(props) => props.onClick && css`\n      &:hover {\n        opacity: 0.6;\n      }\n    `\n  }\n\n  transition: all ${(props) => props.theme.animations.time.fast};\n\n  span {\n    font-size: ${(props) => props.theme.tag.textFontSize};\n  }\n`;\n\nTag.defaultProps = {\n  theme: theme\n}\n\nexport default Tag;\n"],"mappings":"AAAA;AAwCA;AACA;AAKA;AACA;AAMA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;AAEA;;;;AAQA;;;;;;AAUA;;AC/EA;;AAIA;;AAIA;;AAIA;;ACxBA;;ACgBA;ACkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;;;AAMA;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAIA;;AC3EA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AAGA;;;;;ACJA;;;AAKA;;;;;;AAMA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAIA;;AAIA;;;;;;;ACrCA;;;AAoBA;;AC+CA;;ACTA;;;;;AAQA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;;;;AAIA;AACA;;AAEA;;;;;;;;AAQA;;;;;;;;AAaA;;;;;ACpHA;;;;;;;;;ACyDA;AACA;;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;;;;AAIA;AACA;AACA;;;;AAMA;;AClGA;ACsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;AAOA;AACA;;AAEA;;AAIA","sourceRoot":""}